version: 2.1
orbs: 
  aws-cli: circleci/aws-cli@3.1.1
  terraform: circleci/terraform@3.0.1
  maven: circleci/maven@1.4.0

jobs:
  build:
    docker:
      - image: cimg/openjdk:11.0.18
    steps:
      - run: echo "Build"

  stage:
    docker:
      - image: cimg/openjdk:11.0.18
    working_directory: ~/terraform
    steps:
      - checkout
      - setup_remote_docker
      - run: echo "Stage"
      - aws-cli/setup:
           profile-name: default
      - run: aws --version
      - run: bash ./scripts/install_terraform.sh
      - run: bash ./scripts/initplan.sh
      - run: echo "Staged successfully"      

  deploy:
    docker:
      - image: cimg/openjdk:11.0.18
    working_directory: ~/terraform
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "4c:fc:5e:b0:af:84:76:84:72:da:55:ce:ca:56:49:5c"
      - setup_remote_docker
      - run: echo "Deploy"
      - aws-cli/setup:
           profile-name: default
      - run: aws --version
      - run: bash ./scripts/install_terraform.sh
      - run: bash ./scripts/apply.sh
      - run: bash ./scripts/dockerstage.sh
      - run: ssh -o StrictHostKeyChecking=no $SSH_USER_NAME@$SSH_HOST_NAME "sudo docker pull $dockerhub_login/bookmark:latest && sudo docker run -d -p 80:8080 $dockerhub_login/bookmark:latest"
      - run: echo "Deployed successfully"

  # destroy:
  #   docker:
  #     - image: cimg/openjdk:11.0.18
  #   working_directory: ~/terraform
  #   steps:
  #     - checkout
  #     - add_ssh_keys:
  #         fingerprints:
  #           - "4c:fc:5e:b0:af:84:76:84:72:da:55:ce:ca:56:49:5c"
  #     - setup_remote_docker
  #     - run: echo "Deploy"
  #     - aws-cli/setup:
  #          profile-name: default
  #     - run: aws --version
  #     - run: bash ./scripts/install_terraform.sh
  #     - run: bash ./scripts/apply.sh


workflows:
  build-env:
    jobs:
    - build
    - stage_env:
        context: odu_aws   
    - apply approval:
        type: approval
        requires:
        - stage_env
    - deploy_env:
        context: odu_aws
        requires: 
         - apply approval
    # - destroy_env:
    #     context: odu_aws
